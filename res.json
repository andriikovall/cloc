{
  "type": "Program",
  "start": 0,
  "end": 878,
  "body": [
    {
      "type": "IfStatement",
      "start": 0,
      "end": 161,
      "test": {
        "type": "BinaryExpression",
        "start": 4,
        "end": 11,
        "left": {
          "type": "Identifier",
          "start": 4,
          "end": 5,
          "name": "a"
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 10,
          "end": 11,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13,
        "end": 19,
        "body": []
      },
      "alternate": {
        "type": "IfStatement",
        "start": 25,
        "end": 161,
        "test": {
          "type": "BinaryExpression",
          "start": 29,
          "end": 36,
          "left": {
            "type": "Identifier",
            "start": 29,
            "end": 30,
            "name": "b"
          },
          "operator": "===",
          "right": {
            "type": "Literal",
            "start": 35,
            "end": 36,
            "value": 2,
            "raw": "2"
          }
        },
        "consequent": {
          "type": "BlockStatement",
          "start": 38,
          "end": 161,
          "body": [
            {
              "type": "TryStatement",
              "start": 46,
              "end": 70,
              "block": {
                "type": "BlockStatement",
                "start": 50,
                "end": 58,
                "body": []
              },
              "handler": {
                "type": "CatchClause",
                "start": 59,
                "end": 70,
                "param": {
                  "type": "Identifier",
                  "start": 65,
                  "end": 66,
                  "name": "e"
                },
                "body": {
                  "type": "BlockStatement",
                  "start": 68,
                  "end": 70,
                  "body": []
                }
              },
              "finalizer": null
            },
            {
              "type": "IfStatement",
              "start": 76,
              "end": 159,
              "test": {
                "type": "BinaryExpression",
                "start": 80,
                "end": 87,
                "left": {
                  "type": "Identifier",
                  "start": 80,
                  "end": 81,
                  "name": "a"
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "start": 86,
                  "end": 87,
                  "value": 1,
                  "raw": "1"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 89,
                "end": 97,
                "body": []
              },
              "alternate": {
                "type": "IfStatement",
                "start": 103,
                "end": 159,
                "test": {
                  "type": "BinaryExpression",
                  "start": 107,
                  "end": 114,
                  "left": {
                    "type": "Identifier",
                    "start": 107,
                    "end": 108,
                    "name": "b"
                  },
                  "operator": "===",
                  "right": {
                    "type": "Literal",
                    "start": 113,
                    "end": 114,
                    "value": 2,
                    "raw": "2"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "start": 116,
                  "end": 159,
                  "body": [
                    {
                      "type": "TryStatement",
                      "start": 126,
                      "end": 152,
                      "block": {
                        "type": "BlockStatement",
                        "start": 130,
                        "end": 140,
                        "body": []
                      },
                      "handler": {
                        "type": "CatchClause",
                        "start": 141,
                        "end": 152,
                        "param": {
                          "type": "Identifier",
                          "start": 147,
                          "end": 148,
                          "name": "e"
                        },
                        "body": {
                          "type": "BlockStatement",
                          "start": 150,
                          "end": 152,
                          "body": []
                        }
                      },
                      "finalizer": null
                    }
                  ]
                },
                "alternate": null
              }
            }
          ]
        },
        "alternate": null
      }
    },
    {
      "type": "TryStatement",
      "start": 163,
      "end": 186,
      "block": {
        "type": "BlockStatement",
        "start": 167,
        "end": 174,
        "body": []
      },
      "handler": {
        "type": "CatchClause",
        "start": 175,
        "end": 186,
        "param": {
          "type": "Identifier",
          "start": 181,
          "end": 182,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 184,
          "end": 186,
          "body": []
        }
      },
      "finalizer": null
    },
    {
      "type": "SwitchStatement",
      "start": 191,
      "end": 246,
      "discriminant": {
        "type": "Literal",
        "start": 199,
        "end": 200,
        "value": 3,
        "raw": "3"
      },
      "cases": [
        {
          "type": "SwitchCase",
          "start": 209,
          "end": 216,
          "consequent": [],
          "test": {
            "type": "Literal",
            "start": 214,
            "end": 215,
            "value": 2,
            "raw": "2"
          }
        },
        {
          "type": "SwitchCase",
          "start": 222,
          "end": 241,
          "consequent": [
            {
              "type": "BreakStatement",
              "start": 235,
              "end": 241,
              "label": null
            }
          ],
          "test": {
            "type": "Literal",
            "start": 227,
            "end": 228,
            "value": 3,
            "raw": "3"
          }
        }
      ]
    },
    {
      "type": "ForStatement",
      "start": 254,
      "end": 309,
      "init": {
        "type": "VariableDeclaration",
        "start": 259,
        "end": 268,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 263,
            "end": 268,
            "id": {
              "type": "Identifier",
              "start": 263,
              "end": 264,
              "name": "i"
            },
            "init": {
              "type": "Literal",
              "start": 267,
              "end": 268,
              "value": 0,
              "raw": "0"
            }
          }
        ],
        "kind": "let"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 270,
        "end": 276,
        "left": {
          "type": "Identifier",
          "start": 270,
          "end": 271,
          "name": "i"
        },
        "operator": "<",
        "right": {
          "type": "Literal",
          "start": 274,
          "end": 276,
          "value": 10,
          "raw": "10"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 278,
        "end": 281,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 278,
          "end": 279,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 283,
        "end": 309,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 290,
            "end": 304,
            "expression": {
              "type": "CallExpression",
              "start": 290,
              "end": 304,
              "callee": {
                "type": "MemberExpression",
                "start": 290,
                "end": 301,
                "object": {
                  "type": "Identifier",
                  "start": 290,
                  "end": 297,
                  "name": "console"
                },
                "property": {
                  "type": "Identifier",
                  "start": 298,
                  "end": 301,
                  "name": "log"
                },
                "computed": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 302,
                  "end": 303,
                  "name": "i"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ForInStatement",
      "start": 311,
      "end": 357,
      "left": {
        "type": "VariableDeclaration",
        "start": 316,
        "end": 323,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 322,
            "end": 323,
            "id": {
              "type": "Identifier",
              "start": 322,
              "end": 323,
              "name": "a"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 327,
        "end": 328,
        "name": "b"
      },
      "body": {
        "type": "BlockStatement",
        "start": 330,
        "end": 357,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 337,
            "end": 352,
            "expression": {
              "type": "CallExpression",
              "start": 337,
              "end": 351,
              "callee": {
                "type": "MemberExpression",
                "start": 337,
                "end": 348,
                "object": {
                  "type": "Identifier",
                  "start": 337,
                  "end": 344,
                  "name": "console"
                },
                "property": {
                  "type": "Identifier",
                  "start": 345,
                  "end": 348,
                  "name": "log"
                },
                "computed": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 349,
                  "end": 350,
                  "name": "a"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ForOfStatement",
      "start": 359,
      "end": 405,
      "left": {
        "type": "VariableDeclaration",
        "start": 364,
        "end": 371,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 370,
            "end": 371,
            "id": {
              "type": "Identifier",
              "start": 370,
              "end": 371,
              "name": "a"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 375,
        "end": 376,
        "name": "b"
      },
      "body": {
        "type": "BlockStatement",
        "start": 378,
        "end": 405,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 385,
            "end": 400,
            "expression": {
              "type": "CallExpression",
              "start": 385,
              "end": 399,
              "callee": {
                "type": "MemberExpression",
                "start": 385,
                "end": 396,
                "object": {
                  "type": "Identifier",
                  "start": 385,
                  "end": 392,
                  "name": "console"
                },
                "property": {
                  "type": "Identifier",
                  "start": 393,
                  "end": 396,
                  "name": "log"
                },
                "computed": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 397,
                  "end": 398,
                  "name": "a"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "DoWhileStatement",
      "start": 407,
      "end": 428,
      "body": {
        "type": "BlockStatement",
        "start": 410,
        "end": 414,
        "body": []
      },
      "test": {
        "type": "Literal",
        "start": 421,
        "end": 426,
        "value": false,
        "raw": "false"
      }
    },
    {
      "type": "WhileStatement",
      "start": 433,
      "end": 454,
      "test": {
        "type": "Literal",
        "start": 440,
        "end": 445,
        "value": false,
        "raw": "false"
      },
      "body": {
        "type": "BlockStatement",
        "start": 447,
        "end": 454,
        "body": []
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 462,
      "end": 498,
      "id": {
        "type": "Identifier",
        "start": 471,
        "end": 474,
        "name": "foo"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 477,
        "end": 498,
        "body": [
          {
            "type": "ReturnStatement",
            "start": 484,
            "end": 493,
            "argument": {
              "type": "Literal",
              "start": 491,
              "end": 492,
              "value": 1,
              "raw": "1"
            }
          }
        ]
      }
    },
    {
      "type": "LabeledStatement",
      "start": 500,
      "end": 572,
      "body": {
        "type": "WhileStatement",
        "start": 514,
        "end": 572,
        "test": {
          "type": "Literal",
          "start": 521,
          "end": 525,
          "value": true,
          "raw": "true"
        },
        "body": {
          "type": "BlockStatement",
          "start": 527,
          "end": 572,
          "body": [
            {
              "type": "BreakStatement",
              "start": 534,
              "end": 540,
              "label": null
            },
            {
              "type": "ContinueStatement",
              "start": 546,
              "end": 567,
              "label": {
                "type": "Identifier",
                "start": 555,
                "end": 566,
                "name": "exampleLoop"
              }
            }
          ]
        }
      },
      "label": {
        "type": "Identifier",
        "start": 500,
        "end": 511,
        "name": "exampleLoop"
      }
    },
    {
      "type": "ThrowStatement",
      "start": 574,
      "end": 597,
      "argument": {
        "type": "NewExpression",
        "start": 580,
        "end": 596,
        "callee": {
          "type": "Identifier",
          "start": 584,
          "end": 589,
          "name": "Error"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 590,
            "end": 595,
            "value": "foo",
            "raw": "'foo'"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 609,
      "end": 628,
      "expression": {
        "type": "CallExpression",
        "start": 609,
        "end": 627,
        "callee": {
          "type": "MemberExpression",
          "start": 609,
          "end": 620,
          "object": {
            "type": "Identifier",
            "start": 609,
            "end": 616,
            "name": "console"
          },
          "property": {
            "type": "Identifier",
            "start": 617,
            "end": 620,
            "name": "log"
          },
          "computed": false
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 621,
            "end": 626,
            "value": "foo",
            "raw": "'foo'"
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 632,
      "end": 642,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 636,
          "end": 641,
          "id": {
            "type": "Identifier",
            "start": 636,
            "end": 637,
            "name": "a"
          },
          "init": {
            "type": "Literal",
            "start": 640,
            "end": 641,
            "value": 1,
            "raw": "1"
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 646,
      "end": 653,
      "expression": {
        "type": "AssignmentExpression",
        "start": 646,
        "end": 652,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 646,
          "end": 647,
          "name": "a"
        },
        "right": {
          "type": "Literal",
          "start": 650,
          "end": 652,
          "value": 13,
          "raw": "13"
        }
      }
    },
    {
      "type": "DebuggerStatement",
      "start": 665,
      "end": 674
    },
    {
      "type": "BlockStatement",
      "start": 686,
      "end": 690,
      "body": []
    },
    {
      "type": "VariableDeclaration",
      "start": 699,
      "end": 713,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 705,
          "end": 712,
          "id": {
            "type": "Identifier",
            "start": 705,
            "end": 706,
            "name": "b"
          },
          "init": {
            "type": "Literal",
            "start": 709,
            "end": 712,
            "value": 234,
            "raw": "234"
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "FunctionDeclaration",
      "start": 717,
      "end": 739,
      "id": {
        "type": "Identifier",
        "start": 726,
        "end": 730,
        "name": "buzz"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 733,
        "end": 739,
        "body": []
      }
    },
    {
      "type": "ClassDeclaration",
      "start": 741,
      "end": 762,
      "id": {
        "type": "Identifier",
        "start": 747,
        "end": 755,
        "name": "FooClass"
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "start": 756,
        "end": 762,
        "body": []
      }
    },
    {
      "type": "ExportAllDeclaration",
      "start": 764,
      "end": 790,
      "source": {
        "type": "Literal",
        "start": 778,
        "end": 789,
        "value": "../module",
        "raw": "'../module'"
      }
    },
    {
      "type": "ExportDefaultDeclaration",
      "start": 794,
      "end": 812,
      "declaration": {
        "type": "Literal",
        "start": 809,
        "end": 811,
        "value": 13,
        "raw": "13"
      }
    },
    {
      "type": "ExportNamedDeclaration",
      "start": 817,
      "end": 842,
      "declaration": {
        "type": "VariableDeclaration",
        "start": 824,
        "end": 842,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 830,
            "end": 841,
            "id": {
              "type": "Identifier",
              "start": 830,
              "end": 833,
              "name": "bar"
            },
            "init": {
              "type": "Literal",
              "start": 836,
              "end": 841,
              "value": 13231,
              "raw": "13231"
            }
          }
        ],
        "kind": "const"
      },
      "specifiers": [],
      "source": null
    },
    {
      "type": "ImportDeclaration",
      "start": 847,
      "end": 868,
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "start": 854,
          "end": 857,
          "local": {
            "type": "Identifier",
            "start": 854,
            "end": 857,
            "name": "abc"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "start": 863,
        "end": 867,
        "value": "sd",
        "raw": "'sd'"
      }
    }
  ],
  "sourceType": "module"
}